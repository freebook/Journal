<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN"
	"/usr/share/xml/docbook/schema/dtd/5.0/docbook.dtd" [
	<!ENTITY article.author.xml 		SYSTEM "../common/article.author.xml">
	<!ENTITY book.info.legalnotice.xml 	SYSTEM "../common/book.info.legalnotice.xml">
	<!ENTITY book.info.abstract.xml		SYSTEM "../common/book.info.abstract.xml">
]>
<article xml:base="http://netkiller.github.io/journal/"
	xmlns="http://docbook.org/ns/docbook" xml:lang="zh-cn">
	<articleinfo>
		<title>Gearman + PHP 实现分布式对象调用</title>
		<subtitle>http://netkiller.github.io/journal/gearman.php.html</subtitle>
		&article.author.xml;
		<pubdate>$Date$</pubdate>
		<releaseinfo>$Id: 9c398ce66f66eef0683cd940da22340dbed1c671 $</releaseinfo>
		&book.info.legalnotice.xml;
		<abstract>
			<para>在群里看到有网友问，IDC的服务器是否需要开启防火墙，我意识到应该写一篇关于IDC安全的文章。 </para>
		</abstract>
		&book.info.abstract.xml;
		<keywordset>
			<keyword>Gearman</keyword>
			<keyword></keyword>
			<keyword></keyword>
		</keywordset>
	</articleinfo>

 	<section>
		<title>Gearman Job Server</title>
 		<para>文本格式回复</para>
		<screen>
yum install gearmand
		</screen>	
	</section>


	<section>
		<title>Gearman PHP扩展</title>

		<para>PHP扩展安装</para>
		<screen>
		<![CDATA[
#!/bin/bash

yum install libgearman-devel -y
pecl install gearman

cat >> /srv/php/etc/conf.d/gearman.ini <<EOF
extension=gearman.so
EOF
		]]>
		</screen>
		<para>确认模块是否安装，同时检查gearman扩展的版本。</para>
		<screen>
# php -m | grep gearman
gearman

# php -r 'printf("%s\r\n",gearman_version());'
1.1.8
		</screen>
		<para>测试脚本 server.php</para>
		<screen>
		<![CDATA[
<?php
$worker= new GearmanWorker();
$worker->addServer();
$worker->addFunction("reverse", "my_reverse_function");
while ($worker->work());

function my_reverse_function($job)
{
  return strrev($job->workload());
}
?>		
		]]>
		</screen>
		<para>测试脚本 client.php</para>
		<screen>
		<![CDATA[
<?php
$client= new GearmanClient();
$client->addServer();
print $client->doNormal("reverse", "Hello World!");
?>
		]]>
		</screen>
		<para>我用'o' 表示与上次备份中有差异的部分。</para>
		
	</section>

	<section>
		<title>参数传递与返回值</title>
		<para>Gearman 向functon 传递参数只能通过$job->workload(), 而 $job->workload() 只能传递字符串。</para>
		<para>如果托传递多个参数，需要将参数序列化后传递</para>
		<para>返回值也一样，一个字符串可以直接返回，如果返回数字类型是不允许的，需要序列化处理</para>
		<example>
			<title>多参数传递与返回值实例</title>
			<para>Server</para>
			<screen>
			<![CDATA[
<?php
require 'Doctrine/Common/ClassLoader.php';

use Doctrine\Common\ClassLoader;
use Doctrine\DBAL\DriverManager;
use Doctrine\DBAL\Configuration;

$classLoader = new ClassLoader('Doctrine', '/www/DoctrineDBAL-2.3.4/');
$classLoader->register();

$config = new Configuration();

$connectionParams = array(
    'dbname' => 'example',
    'user' => 'www',
    'password' => 'password',
    'host' => '192.168.2.1',
    'driver' => 'pdo_mysql',
);
$conn = DriverManager::getConnection($connectionParams, $config);

$host = '127.0.0.1';
$port = 4730;

echo "Starting\n";

# Create our worker object.
$gmworker= new GearmanWorker();

# Add default server (localhost).
$gmworker->addServer($host, $port);

# Register function "reverse" with the server. Change the worker function to
# "reverse_fn_fast" for a faster worker with no output.
$gmworker->addFunction("members", "members");

print "Waiting for job...\n";
while($gmworker->work())
{
  if ($gmworker->returnCode() != GEARMAN_SUCCESS)
  {
    echo "return_code: " . $gmworker->returnCode() . "\n";
    break;
  }
}

function members($job)
{
	global  $conn;
	$param = unserialize($job->workload());
	print_r($param);
	$sql = "SELECT username FROM members limit ".$param['limit'].",".$param['offset'];
	$stmt = $conn->query($sql);

	while ($row = $stmt->fetch()) {
		//printf("%s\r\n", );
		$result[] = $row['username'];
	}
	return serialize($result);
}
			]]>
			</screen>
			<para>Client</para>
			<screen>
			<![CDATA[
<?php

# create our client object
$gmclient= new GearmanClient();

# add the default server (localhost)
$gmclient->addServer();

# run reverse client in the background
$job_handle = $gmclient->doNormal("members",serialize(array('limit'=>5,'offset'=>10)));

if ($gmclient->returnCode() == GEARMAN_SUCCESS)
{
	print_r(unserialize($job_handle));
}		
			]]>	
			</screen>
			<para>运行结果</para>
			<screen>
$ php client.php 
Array
(
    [0] => 257000005
    [1] => 257000006
    [2] => 257000009
    [3] => 257000010
    [4] => 257000011
    [5] => 257000012
    [6] => 257000013
    [7] => 257000014
    [8] => 257000015
    [9] => 257000016
)
			</screen>
		</example>
		<para></para>
	</section>
	
</article>